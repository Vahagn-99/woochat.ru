extend type Query @guard {
    users:[User!]! @all
    user(email:String @eq):User @find
    userById(id:ID @eq):User @find
    me:User! @auth
}

extend type Mutation @guard {
    createUser(input:CreateUserInput!):User! @field(resolver: "\\App\\GraphQL\\Mutations\\User\\CreateUser")
    updateUser(input:CreateUserInput!):User! @update
    deleteUser(id:ID!): User @delete
}

# api
type User {
    id: ID!
    domain: String!
    email:String
    phone:String
    created_at: String!
    max_instances_count: Int!
    instances: [WhatsappInstance]! @hasMany
    subscription: Subscription @field(resolver: "\\App\\GraphQL\\Queries\\Subscription")
}

type Subscription {
    id: ID!
    domain: String!
    expired_at:String!
}

# inputs
input CreateUserInput{
    id:ID
    name:String!
    email:String!
}

input UpdateUserInput{
    id:ID
    name:String!
    email:String!
}

# enums

# interfaces